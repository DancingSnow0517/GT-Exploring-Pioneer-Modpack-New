GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('large_primitive_blast_furnace', 'multiblock')
    .rotationState(RotationState.NON_Y_AXIS)
    .appearanceBlock(GTBlocks.CASING_PRIMITIVE_BRICKS)
    .recipeType(GTRecipeTypes.PRIMITIVE_BLAST_FURNACE_RECIPES)
    .recipeModifier((machine, recipe) => GTRecipeModifiers.accurateParallel(machine, recipe, 16, false).getFirst(), false)
    .pattern(definition => FactoryBlockPattern.start()
        .aisle('  FFF  ', '       ', '       ', '       ', '       ', '       ', '       ', '       ', '       ', '       ', '       ')
        .aisle(' AFFFA ', ' AFFFA ', ' AFFFA ', ' AFFFA ', '       ', '       ', '       ', '       ', '       ', '       ', '       ')
        .aisle('FFTTTFF', ' F###F ', ' F###F ', ' F###F ', '  FFF  ', '  FFF  ', '  FFF  ', '  FFF  ', '   F   ', '   F   ', '   F   ')
        .aisle('FFTTTFF', ' F###F ', ' F###F ', ' F###F ', ' F###F ', ' F###F ', ' F###F ', ' F###F ', '  F#F  ', '  F#F  ', '  F#F  ')
        .aisle('FFTTTFF', ' F###F ', ' F###F ', ' F###F ', '  FFF  ', '  FFF  ', '  FFF  ', '  FFF  ', '   F   ', '   F   ', '   F   ')
        .aisle(' AFFFA ', ' ABCBA ', ' ABBBA ', ' AFFFA ', '       ', '       ', '       ', '       ', '       ', '       ', '       ')
        .aisle('  FFF  ', '       ', '       ', '       ', '       ', '       ', '       ', '       ', '       ', '       ', '       ')
        .where('C', Predicates.controller(Predicates.blocks(definition.get())))
        .where('F', Predicates.blocks('gtceu:firebricks'))
        .where('A', Predicates.blocks('gtceu:steel_frame'))
        .where('T', Predicates.blocks('gtceu:steel_firebox_casing'))
        .where('B', Predicates.blocks('gtceu:firebricks').setMinGlobalLimited(0).or(Predicates.autoAbilities(definition.getRecipeTypes())))
        .where('#', Predicates.air())
        .build())
    .workableCasingRenderer('gtceu:block/casings/solid/machine_primitive_bricks', 'gtceu:block/multiblock/primitive_blast_furnace', true)
})